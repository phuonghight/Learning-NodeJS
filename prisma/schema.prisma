// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model Otp {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email     String   @unique
  otp       Int
  user      User?
  deletedAt DateTime @map("deleted_at")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  fullName String @map("full_name")
  email    String @unique
  password String
  avatar   String
  role     Role   @default(USER)

  otp          Otp           @relation(fields: [email], references: [email])
  transactions Transaction[]

  @@map("users")
}

model Transaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  total      Float
  note       String
  date       DateTime
  imgUrl     String?  @map("img_url")
  location   String?
  withPerson String?  @map("with_person")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  @@fulltext([note, location, withPerson])
  @@map("transactions")
}
